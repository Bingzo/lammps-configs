# DPD example
# Poiseuille flow with parameters from 
# J.Chem.Phys 132, 144103 (2010)

# the simulation produces spatially averages 
# vy.av (velocity), rho.av (density), simtemp.av (temperature), sxy.av (shear stress)
echo           both
units		si
# tolerance
#variable        EPSILON 1e-8
variable       ndim  index 2
variable number_density equal 3  # Table 1
variable        xsize equal 25   # p. 4
variable        ysize equal 100
if "${ndim}==3" then "variable        zsize equal 10"
variable        kb equal 1.3806488e-23 
variable        T equal 1.0/${kb} # Table 1
variable        cutoff equal 2.0 # Table 1
variable        cutoff_cons equal 2.0 # eq. (5)
variable        sigma equal 3.0  # Table 1
variable        gamma equal ${sigma}^2/(2*${T}*${kb}) # eq. (6)
variable        sigma delete
print           "gamma: ${gamma} (must be 4.5)" # Table 1

variable        adpd     equal 25 # Table 1
variable        m_power index  0.25 # Table 1
variable        pmass    equal 1.0 # TODO:

variable gy equal 0.025 # from 0.025 to 0.25  (p.6)

timestep	0.005 # TODO:
# number of timesteps
variable ntime equal 100000

dimension       ${ndim}
atom_style	atomic 2
communicate	single vel yes

# lattice parameter
variable lsp    equal 1.0/${number_density}^(1.0/${ndim})
if "${ndim}==3" then "lattice sc      ${lsp} origin 0.0 0.0 0.0" else "lattice sq  ${lsp} origin 0.1 0.1 0.0"
variable  lsp   delete 

if "${ndim}==3" then "variable Npart equal ${xsize}*${ysize}*${zsize}*${number_density}" else "variable Npart equal ${xsize}*${ysize}*${number_density}"
print "Npart = ${Npart}"

boundary     f p p
if "${ndim}==3" then "region		box block 0 ${xsize} 0 ${ysize} 0 ${zsize} units box" else "region		box block 0 ${xsize} 0 ${ysize} -0.01 0.01 units box"
create_box	2 box

variable        need_nbeads equal (${xsize}-${cutoff})*(${ysize}-${cutoff})*${number_density}
print "need_nbeads: ${need_nbeads}"

# TODO: find the way to generate the right number of atoms
# delete extra atoms
#group extra_atoms id > ${Npart}
#delete_atoms group extra_atoms
mass		1 ${pmass}
mass		2 ${pmass}

print           ${cutoff}
variable     lowerwallpos equal ${cutoff}
variable     upperwallpos equal ${xsize}-${cutoff}

region	     rlwall block INF ${lowerwallpos} INF INF INF INF units box
group	     lower region rlwall

region	     ruwall block ${upperwallpos} INF INF INF INF INF units box
group	     upper region ruwall

group	     wall  union lower upper
# define a region for chain2
region       nochain union 2 ruwall rlwall
group	     flow subtract all wall
set          group wall type 2


velocity     wall set 0.0 0.0 0.0
fix	     fwall wall setforce 0.0 0.0 0.0

fix lrefwall flow wall/reflect xlo ${lowerwallpos} xhi ${upperwallpos} units box
variable      lowerwallpos delete
variable      upperwallpos delete
