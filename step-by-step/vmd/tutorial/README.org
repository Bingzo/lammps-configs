* Basic vmd usage
vmd needs a file with molecular topology (see [[file:data.psf]]).
data.psf describes a 10 beads linear molecular with bonds (0-1, 1-2,
2-3 and so on). All atoms are named "A".

Another file [[file:data.dcd]] contains trajectory of the molecuar. To
load files in vmd run
#+BEGIN_SRC sh
vmd -psf data.psf -dcd data.dcd
#+END_SRC

* psf file format
[[http://www.ks.uiuc.edu/Training/Tutorials/namd/namd-tutorial-unix-html/node21.html][psf]]

The fields in the atom section are atom ID, segment name, residue ID,
residue name, atom name, atom type, charge, mass, and an unused 0. PSF
files may be in either CHARMM or X-PLOR format, with the CHARMM format
using an integer rather than a name for the atom type. NAMD requires
the X-PLOR format, which is also more flexible since it is not tied to
the specific order of atom types in a single parameter file. NAMD and
VMD require that the order of atoms in any PDB, DCD, or other atomic
data file exactly matches the order found in the PSF file.

* Summary of vmd commands
Table from the User Guide
#+TBLNAME: Table 9.1: Summary of core text commands in VMD.
| First Word        | Description                                                                    |
|-------------------+--------------------------------------------------------------------------------|
| animate           | Play/Pause/Rewind a molecular trajectory.                                      |
| atomselect [fn:2] | Create atom selection objects for analysis.                                    |
| axes              | Position a set of XYZ axes on the screen.                                      |
| color             | Change the color assigned to molecules, or edit the colormap.                  |
| colorinfo         | (Tcl) Obtain color properties for various objects                              |
| display           | Change various aspects of the graphical display window.                        |
| exit, quit        | Quit VMD.                                                                      |
| gettimestep       | Retrieve a timestep as a binary Tcl array (use for plugins)                    |
| help              | Display an on-line help file with an HTML viewer.                              |
| imd               | Control the connection to a remote simulation.                                 |
| label             | Turn on/off labels for atoms, bonds, angles, dihedral angles, or springs.      |
| light             | Control the light sources used to illuminate graphical objects.                |
| logfile           | Turn on/off logging a VMD session to a file or the console.                    |
| material          | Create new material definitions and modify their settings.                     |
| measure           | Measure properties of moleculear structures.                                   |
| menu              | Control or query the on-screen GUI windows.                                    |
| molecule or mol   | Load, modify, or delete a molecule.                                            |
| molinfo           | Get information about a molecule or loaded file.                               |
| mouse             | Change the current state (mode) of the mouse.                                  |
| play              | Start executing text commands from a specified file.                           |
| render            | Output the currently displayed image (scene) to a file.                        |
| rock              | Rotate the current scene continually at a specified rate.                      |
| rotate            | Rotate the current scene around a given axis by a certain angle.               |
| scale             | Scale the current scene up or down.                                            |
| stage             | Position a checkerboard stage on the screen.                                   |
| tool              | Initialize and control external spatial tracking devices.                      |
| translate         | Translate the objects in the current scene.                                    |
| user              | Add new keyboard commands.                                                     |
| vmdinfo           | (Tcl) Get information about this version of VMD                                |
| volmap            | Create volumetric data based on molecular information                          |
| wait              | Wait a number of seconds before reading another command. Animation continues.  |
| sleep             | Sleep a number of seconds before reading another command. Animation is frozen. |

#+TBLNAME: More tcl commands
| vmdcon [fn:1] | print data to the VMD console or change console behavior |

* vmd commands
** animate
"These commands control the animation of a molecular trajectory and
are used to *read and write* animation frames to/from a file or
Play/Pause/Rewind a molecular trajectory."

#+NAME: sel
#+BEGIN_SRC tcl :results silent
animate read psf data.psf
animate read dcd data.dcd
set sel [atomselect top all]
#+END_SRC

** atomselect 
"Atom selection is the primary method to access information about the
atoms in a molecule. It works in two steps. The first step is to
create a selection given the selection text, molecule id, and optional
frame number. This is done by a function called atomselect, which
returns the name of the new atom selection. the second step is to use
the created selection to access the information about the atoms in the
selections". See [fn:1].

Number of atoms
#+BEGIN_SRC tcl :noweb yes
<<sel>>
return [$sel num]
#+END_SRC

#+RESULTS:
: 10

List of indices
#+BEGIN_SRC tcl :noweb yes
<<sel>>
return [$sel list]
#+END_SRC

#+RESULTS:
: 0 1 2 3 4 5 6 7 8 9

Return text to create a selection
#+BEGIN_SRC tcl :noweb yes
<<sel>>
return [$sel text]
#+END_SRC

#+RESULTS:
: all

Set the frame for selection
#+BEGIN_SRC tcl :noweb yes
<<sel>>
$sel frame 4
return [$sel frame]
#+END_SRC

#+RESULTS:
: 4

get/set attribute
#+BEGIN_SRC tcl :noweb yes
<<sel>>
return [$sel get name]
#+END_SRC

#+RESULTS:
: A A A A A A A A A A


get list of bonds
#+BEGIN_SRC tcl :noweb yes
<<sel>>
return [$sel getbonds]
#+END_SRC

#+RESULTS:
: 1 {0 2} {1 3} {2 4} {3 5} {4 6} {5 7} {6 8} {7 9} 8

write selected atom to a file
#+BEGIN_SRC tcl :noweb yes :results silent
<<sel>>
set nf 1
$sel frame ${nf}
$sel writexyz data.xyz.${nf}
set nf 2
$sel frame ${nf}
$sel writexyz data.xyz.${nf}
#+END_SRC

** axes
#+NAME: showpolymer
#+BEGIN_SRC tcl :noweb yes
  pbc box
  color Display Background white
  scale to 0.20
  rotate x to -90
  mol modstyle 0 0 Lines 5.0
  proc renderpng {basefilename} {
      set ccmd "convert ${basefilename}.tga -resize 30% ${basefilename}.png"
      render TachyonInternal ${basefilename}.tga ${ccmd}
  }
#+END_SRC


#+BEGIN_SRC tcl :noweb yes :results silent
<<sel>>
<<showpolymer>>
renderpng axdef
#+END_SRC
[[file:axdef.png]]

#+BEGIN_SRC tcl :noweb yes :results silent
<<sel>>
<<showpolymer>>
animate pause
axes off
renderpng axoff
#+END_SRC
[[file:axoff.png]]

** color/colorinfo
#+TBLNAME: Table 6.2: Color categories used in VMD
| Category  | Contents                                                               |
|-----------+------------------------------------------------------------------------|
| Display   | The background color                                                   |
| Axes      | The components of the axes                                             |
| Stage     | The colors for the checkboard stage                                    |
| Name      | The available atom names (color by Name)                               |
| Type      | The available atom types (color by Type)                               |
| Resname   | The residue names (color by ResName)                                   |
| Chain     | The one-character chain identifier.                                    |
| Segname   | The segment names (color by SegName)                                   |
| Molecule  | The names assigned to each molecule (color by Molecule)                |
| Highlight | The protein, nucleic, and non-backbone colors                          |
| Restype   | The residue types (color by ResType)                                   |
| Structure | The secondary structure type (helix, sheet, coil) (color by Structure) |
| Surface   | The surface types                                                      |
| Labels    | The different labels (atoms, bonds, etc.)                              |
#+TBLNAME: Table 6.3: Molecular coloring methods
| Method    | Description                                                             |
| Name      | Atom name, using the Name category                                      |
| Type      | Atom type, using the Type category                                      |
| ResName   | Residue name, using the Resname category                                |
| ResType   | Residue type, using the Restype category                                |
| ResID     | Residue identifier, using the resid mod 16 for the color                |
| Chain     | The one-character chain identifier, using the Chain category            |
| SegName   | Segment name, using the Segname category                                |
| Molecule  | Molecule all one color, using the Molecule category                     |
| Structure | Helix, sheet, and coils are colored difierently                         |
| ColorID   | Use a user-specified color index (from 0 to 15)                         |
| Beta      | Color scale based on beta value of the PDB file                         |
| Occupancy | Color scale based on the occupancy field of the PDB file                |
| Mass      | Color scale based on the atomic mass                                    |
| Charge    | Color scale based on the atomic charge                                  |
| Pos       | Color scale based on the distance ...                                   |
| User      | Provides a single data value for each atom for each timestep            |
| Index     | Color scale is based on the atom index...                               |
| Backbone  | Backbone atoms green, everything else is blue                           |
| Throb     | Animates colors through the active color scale based on wall clock time |
| Timestep  | Color scale based on the current trajectory timestep frame              |

- =color category name color=: Set the color of the object specified by category
and name to color.
- =color category name=: Get the color of the object specified by category and
  name.
- =colorinfo categories=: returns a list of available categories
- =colorinfo category category=: returns a list of names for the given category
- =color add item category name colorname=: adds colors for the named
  color category

*** A list of categories
#+BEGIN_SRC tcl :noweb yes
return [colorinfo categories]
#+END_SRC

#+RESULTS:
: Display Axes Name Type Element Resname Restype Chain Segname Conformation Molecule Highlight Structure Surface Labels Stage

*** A list of names for a given category (Display)
#+BEGIN_SRC tcl :noweb yes
return [colorinfo category Display]
#+END_SRC

#+RESULTS:
: Background BackgroundTop BackgroundBot Foreground FPS

*** A list of names for a given category (Name)
#+BEGIN_SRC tcl :noweb yes
return [colorinfo category Name]
#+END_SRC

#+RESULTS:
: H O N C S P Z LPA LPB

*** Get all categories and corresponding names
#+BEGIN_SRC tcl :noweb yes
  set clst [colorinfo categories]
  set otp ""
  foreach cname ${clst} {
      append otp "${cname}: [colorinfo category ${cname}] \n"
  }
  return ${otp}
#+END_SRC

#+RESULTS:
#+begin_example
Display: Background BackgroundTop BackgroundBot Foreground FPS 
Axes: X Y Z Origin Labels 
Name: H O N C S P Z LPA LPB 
Type: H O N C S P Z LP DRUD 
Element: X Ac Ag Al Am Ar As At Au B Ba Be Bh Bi Bk Br C Ca Cd Ce Cf Cl Cm Co Cr Cs Cu Db Ds Dy Er Es Eu F Fe Fm Fr Ga Gd Ge H He Hf Hg Ho Hs I In Ir K Kr La Li Lr Lu Md Mg Mn Mo Mt N Na Nb Nd Ne Ni No Np O Os P Pa Pb Pd Pm Po Pr Pt Pu Ra Rb Re Rf Rg Rh Rn Ru S Sb Sc Se Sg Si Sm Sn Sr Ta Tb Tc Te Th Ti Tl Tm U V W Xe Y Yb Zn Zr 
Resname: ALA ARG ASN ASP CYS GLY GLU GLN HIS ILE LEU LYS MET PHE PRO SER THR TRP TYR VAL ADE CYT GUA THY URA TIP TIP3 WAT SOL H2O LYR ZN NA CL HSE HSD HSP CYX 
Restype: Unassigned Solvent Nucleic_Acid Basic Acidic Polar Nonpolar Ion 
Chain:  
Segname:  
Conformation:  
Molecule:  
Highlight: Proback Nucback Nonback 
Structure: {Alpha Helix} 3_10_Helix Pi_Helix Extended_Beta Bridge_Beta Turn Coil 
Surface: Grasp 
Labels: Atoms Bonds Angles Dihedrals Springs 
Stage: Even Odd 
#+end_example

*** Color atoms
Color atoms. In [[file:data.psf]] atoms are named "A". Create a name for
"A" and set color.

#+BEGIN_SRC tcl :noweb yes :results silent
color add item Name A green
<<sel>>
<<showpolymer>>
renderpng colorpolymer
#+END_SRC

[[file:colorpolymer.png]]

*** Rename and color a half of the atoms

#+BEGIN_SRC tcl :noweb yes :results silent
color add item Name A green
color add item Name B red
<<sel>>
set bs [atomselect top "index<5"]
$bs set name B

<<showpolymer>>
renderpng halfpolymer
#+END_SRC

file:halfpolymer.png
** display
** draw
display user-defined objects built from graphics primitives such as
points, lines, cylinders, cones, spheres, triangles, and text.
** graphics
draws low-level graphics primitives
** TODO gettimestep
=gettimestep= returns garbage
#+BEGIN_SRC tcl :noweb yes
<<sel>>
set ts [gettimestep top 0]
return $ts
#+END_SRC

#+RESULTS:
: Display Axes Name Type Element Resname Restype Chain Segname Conformation Molecule Highlight Structure Surface Labels Stage

* org-mode							      :emacs:
TCL support for org-mode is currently in git version of
org-mode. =-nt= to switch spash-screen off.
#+NAME: vmdgra
#+BEGIN_SRC emacs-lisp :results silent
(setq org-babel-tcl-command "vmd -nt")
#+END_SRC

#+NAME: vmdtxt
#+BEGIN_SRC emacs-lisp :results silent
(setq org-babel-tcl-command "vmd -dispdev none -nt")
;;(setq org-babel-tcl-command "tclsh")
(add-to-list 'load-path "~/org-mode/contrib/babel/langs")
(require 'ob-tcl)
#+END_SRC

Run vmd as emacs tcl shell:
#+NAME: runvmd
#+BEGIN_SRC emacs-lisp :results silent
;; FIXME: cannot make it without a file
(inferior-tcl "./r.sh")
#+END_SRC

* Footnotes

[fn:1] Print vmdcon help message: =vmdcon -help=

[fn:2] select has more command than listed in the manual
#+BEGIN_SRC tcl
set sel [atomselect top all]
set hlp [$sel help]
#+END_SRC

#+BEGIN_EXAMPLE
usage: <atomselection> <command> [args...]

Commands for manipulating atomselection metadata:
  frame [new frame value]      -- get/set frame
  molid|molindex               -- get selection's molecule id
  text                         -- get selection's text
  delete                       -- delete atomselection (to free memory)
  global                       -- move atomselection to global scope
  update                       -- recalculate selection

Commands for getting/setting attributes:
  num                          -- number of atoms
  list                         -- get atom indices
  get <list of attributes>     -- for attributes use 'atomselect keywords'
  set <list of attributes> <nested list of values>
  getbonds                     -- get list of bonded atoms
  setbonds <bondlists>
  getbondorders                -- get list of bond orders
  setbondorders <bondlists>
  getbondtypes                 -- get list of bond types
  setbondtypes  <bondlists>
  moveto|moveby <3 vector>     -- change atomic coordinates
  lmoveto|lmoveby <x> <y> <z>
  move <4x4 transforamtion matrix>

Commands for writing to a file:
  writepdb <filename>          -- write sel to PDB file
  writeXXX <filename>          -- write sel to XXX file (if XXX is a known format)
#+END_EXAMPLE
